receivers:
  otlp:
    protocols:
      grpc:
      http:
  prometheus:
    config:
      scrape_configs:
      # - job_name: otel-collector-metrics
      #   scrape_interval: 10s
      #   static_configs:
      #   - targets: ['127.0.0.1:8888']
      - job_name: grafana-metrics7
        scrape_interval: 10s
        static_configs:
        - targets: ['grafana:3000']
  tcplog:
    listen_address: 0.0.0.0:54526
    operators:
      - type: regex_parser
        regex: (?P<timestamp_field>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)
      - type: add
        field: body
        value: EXPR(replace(body, attributes.timestamp_field, 'Oct 11 22:14:15'))
      - type: syslog_parser
        protocol: rfc3164
        location: UTC
      - type: time_parser
        parse_from: attributes.timestamp_field
        layout: "%Y-%m-%dT%H:%M:%SZ"
        layout_type: strptime
      - type: move
        if: "attributes.message != nil"
        from: attributes.message
        to: body
      - type: remove
        field: attributes.timestamp_field
      - type: remove
        field: attributes.proc_id
      - type: remove
        field: attributes.priority
      - type: remove
        field: attributes.facility

processors:
  batch:

exporters:
  logicmonitor:
    # Target URL to send metrics to LogicMonitor Push Metrics API
    endpoint: "https://${env:LM_COMPANY}.logicmonitor.com"
    
    # LogicMonitor API authentication credentials
    api_token:
      access_id: "${env:LM_ACCESS_ID}"
      access_key: "${env:LM_ACCESS_KEY}"
    
    # HTTP client configuration options (following OpenTelemetry standards)
    # timeout: 30s                    # HTTP request timeout (default: 30s)
    # read_buffer_size: 0             # Read buffer size in bytes (default: 0, no buffering)
    # write_buffer_size: 0            # Write buffer size in bytes (default: 512KB)
    # max_idle_conns: 100             # Maximum idle connections (default: 100)
    # max_idle_conns_per_host: 0      # Maximum idle connections per host (default: unlimited)
    # max_conns_per_host: 0           # Maximum connections per host (default: unlimited)
    # idle_conn_timeout: 90s          # Idle connection timeout (default: 90s)
    # compression: none               # Compression algorithm: none, gzip, snappy, zstd (default: none)
    
    # TLS configuration
    # tls:
    #   insecure: false               # Skip TLS verification (default: false)
    #   insecure_skip_verify: false   # Skip TLS certificate verification (default: false)
    #   ca_file: ""                   # Path to CA certificate file
    #   cert_file: ""                 # Path to client certificate file
    #   key_file: ""                  # Path to client key file
    #   min_version: ""               # Minimum TLS version (1.0, 1.1, 1.2, 1.3)
    #   max_version: ""               # Maximum TLS version
    
    # Custom HTTP headers
    # headers:
    #   X-Custom-Header: "value"
    
    # Retry configuration (following OpenTelemetry standards)
    retry_on_failure:
      enabled: true                   # Enable retry on failure (default: true)
      initial_interval: 5s            # Initial wait time before retry (default: 5s)
      max_interval: 30s               # Maximum wait time between retries (default: 30s)
      max_elapsed_time: 300s          # Total time to retry before giving up (default: 300s)
    
    # Queue configuration for batching metrics before export
    # Default queue size of 10,000 matches LogicMonitor's rate limit of 10,000 requests/minute
    sending_queue:
      enabled: true                   # Enable queue (default: true)
      num_consumers: 10               # Number of parallel consumers (default: 10)
      queue_size: 10000               # Maximum queue size (default: 10000, matches 10k req/min limit)
  otlphttp/prometheus:
    endpoint: http://prometheus:9090/api/v1/otlp
    encoding: proto
    tls:
      insecure: true
  nop:

extensions:
  health_check:

service:
  extensions: [health_check]
  telemetry:
    resource:
      service.name: grafana-opentelemetry
      author: monitoriginartist
    metrics:
      level: detailed
      readers:
        # - periodic:
        #     exporter:
        #       otlp:
        #         protocol: http/protobuf
        #         endpoint: http://prometheus:9090/api/v1/otlp/v1/metrics
        - pull:
            exporter:
              prometheus:
                host: 127.0.0.1
                port: 8888
                with_resource_constant_labels:
                  included:
                      - service.name
                      - author
    logs:
      level: debug
      disable_stacktrace: true
  pipelines:
    metrics:
      receivers: [prometheus]
      processors: []
      exporters: [logicmonitor, otlphttp/prometheus]
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [nop]
    logs:
      receivers: [tcplog]
      processors: [batch]
      exporters: [nop]
